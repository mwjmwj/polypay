<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.polypay.platform.dao.MerchantFinanceMapper" >
  <resultMap id="BaseResultMap" type="com.polypay.platform.bean.MerchantFinance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blance_amount" property="blanceAmount" jdbcType="DECIMAL" />
    <result column="fronze_amount" property="fronzeAmount" jdbcType="DECIMAL" />
    <result column="merchant_id" property="merchantId" jdbcType="VARCHAR" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, blance_amount, fronze_amount, merchant_id, pay_password, create_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from merchant_finance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from merchant_finance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.polypay.platform.bean.MerchantFinance" >
    insert into merchant_finance (id, blance_amount, fronze_amount, 
      merchant_id, pay_password, create_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{blanceAmount,jdbcType=DECIMAL}, #{fronzeAmount,jdbcType=DECIMAL}, 
      #{merchantId,jdbcType=VARCHAR}, #{payPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.polypay.platform.bean.MerchantFinance" >
    insert into merchant_finance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="blanceAmount != null" >
        blance_amount,
      </if>
      <if test="fronzeAmount != null" >
        fronze_amount,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blanceAmount != null" >
        #{blanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="fronzeAmount != null" >
        #{fronzeAmount,jdbcType=DECIMAL},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.polypay.platform.bean.MerchantFinance" >
    update merchant_finance
    <set >
      <if test="blanceAmount != null" >
        blance_amount = #{blanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="fronzeAmount != null" >
        fronze_amount = #{fronzeAmount,jdbcType=DECIMAL},
      </if>
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.polypay.platform.bean.MerchantFinance" >
    update merchant_finance
    set blance_amount = #{blanceAmount,jdbcType=DECIMAL},
      fronze_amount = #{fronzeAmount,jdbcType=DECIMAL},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getMerchantFinanceByUUID" parameterType="java.lang.String" resultMap="BaseResultMap">
  
   select 
    <include refid="Base_Column_List" />
    from merchant_finance
    where merchant_id = #{merchantUUID}
  
  </select>
  
	<select id="listMerchantFinance"
		parameterType="com.polypay.platform.bean.MerchantFinance"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant_finance
		where
		1=1
		<if test="merchantId != null">
			and merchant_id = #{merchantId}
		</if>

	</select>
	
	
	<select id="managerAllMerchantFinance" resultMap="BaseResultMap">
	select 
	sum(blance_amount) as blanceAmount,
	sum(fronze_amount) as fronzeAmount
	from merchant_finance
	</select>
	
	<select id="allProxyMerchantMerchantFinance" resultMap="BaseResultMap" parameterType="java.lang.String">
	select 
	sum(blance_amount) as blanceAmount,
	sum(fronze_amount) as fronzeAmount
	from merchant_finance mf left join merchant_account_info mai on mf.merchant_id = mai.uuid
	where mai.proxy_id = #{proxyId}
		
	</select>
	
		
	<select id="listFindMerchantFinance"
		parameterType="java.util.List"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from merchant_finance
		where merchant_id in 
		<foreach collection="list" open="(" close=")" item="merchant_id" separator="," >
		#{merchant_id}
		</foreach>
	</select>
	
	
  
  
  
</mapper>